knitr::opts_chunk$set(echo = TRUE)
library(caret)
?download.file
trainurl <- https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv
trainurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(trainurl,destfile = "pml_training.csv",method = "curl")
download.file(testurl,destfile = "pml_testing.csv",method = "curl")
?read.csv
pmlTrain <- read.csv("./pmlTrain.csv",na.strings = "NA")
pmlTest <- read.csv("./pmlTest.csv",na.strings = "NA")
set.seed(1611)
names(pmlTrain)
str(pmlTrain)
str(pmlTest$classe)
head(pmlTest$classe)
View(pmlTest)
View(pmlTrain)
head(pmlTraom$classe)
head(pmlTrain$classe)
?pml-training
str(tail(pmlTrain,n = 20))
str(tail(pmlTrain))
str(pmlTrain[,150:160])
pmlTrain$classe
table(pmlTrain$classe)
table(pmlTrain$user_name)
table(pmlTrain$new_window)
table(is.na(pmlTrain$kurtosis_roll_belt))
table(pmlTrain$num_window)
table(pmlTrain$cvtd_timestamp)
qplot(classe ~ user_name,data = pmlTrain)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
qplot(classe ~ user_name,data = pmlTrain)
library(caret)
library(qqplot2)
install.packages("qqplot2")
table(pmlTrain$classe,pmlTrain$user_name)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
table(is.blank(pmlTrain$total_accel_belt))
count_missing <- function(x){
sum(is.na(x) | x == "")
}
missing_counts <- sapply(pmlTrain,count_missing)
head(missing_counts)
str(missing_counts)
missing_percentages <- missing_counts / total_counts*100
total_counts <- nrow(pmlTrain)
missing_percentages <- missing_counts / total_counts*100
missing_percentages
missing_counts
19622-19216
knitr::opts_chunk$set(echo = TRUE)
head(pmlTrain)
dim(pmlTrain)
names(pmlTrain)
str(pmlTrain)
head(pmlTrain, n = 20)
head(pmlTrain, n = 20)
missing_counts
qplot(pmlTrain$new_window,pmlTrain$max_roll_belt)
?qplot
plot(pmlTrain$new_window,pmlTrain$max_roll_belt)
missing_counts
pmlTrain1 <- subset(pmlTrain,kurtosis_roll_belt != "")
View(pmlTrain1)
sapply(pmlTrain1,count_missing)
dim(pmlTrain1)
pmlTrain2 <- pml1[,missing_counts == 0]
pmlTrain2 <- pmlTrain[,missing_counts == 0]
View(pmlTrain2)
dim(pmlTrain2)
View(pmlTrain2)
table(pmlTrain1$classe,pmlTrain1$user_name)
table(pmlTrain2$classe,pmlTrain2$user_name)
table(pmlTrain1$classe,pmlTrain1$user_name)/table(pmlTrain2$classe,pmlTrain2$user_name)
table(pmlTrain2$classe,pmlTrain2$user_name) / table(pmlTrain1$classe,pmlTrain1$user_name)
table(pmlTrain1$classe,pmlTrain1$user_name)
table(pmlTrain2$classe,pmlTrain2$user_name)
str(pmlTrain)
str(pmlTrain1)
View(pmlTrain2)
str(pmlTrain2)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
pmlTrain1 <- pmlTrain[,missing_counts == 0]
dim(pmlTrain1)
View(pmlTrain1)
pmlTrain1$classe <- as.factor(pmlTrain1$classe)
View(pmlTrain1)
str(pmlTrain1)
library(dplyr)
library(ggplot2)
df_long <- pmlTrain2 %>%
select(-classe) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
?pivot_longer
library(tidyr)
df_long <- pmlTrain2 %>%
select(-classe) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
df_long <- pmlTrain2 %>%
select(-classe, -user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
df_summary <- df_long %>%
group_by(variable, classe = df$classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
df_summary <- df_long %>%
group_by(variable, classe = pmlTrain2$classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
df_long <- pmlTrain2 %>%
select(-classe, -user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window) %>%
pivot_longer(cols = everything(), names_to = "variable", values_to = "value")
df_summary <- df_long %>%
group_by(variable, classe = pmlTrain2$classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
View(df_long)
View(df_long)
df_long <- pmlTrain2 %>%
select(-classe, -user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value")
df_long <- pmlTrain2 %>%
select(-user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value")
df_summary <- df_long %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
expplot <- ggplot(df_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(expplot)
View(expplot)
ggplot(df_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_long <- pmlTrain2 %>%
select(-X, -user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value")
df_summary <- df_long %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
ggplot(df_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
x <- aov(pmlTrain2$accel_arm_x ~ pmlTrain2$classe)
x
summary(pmlTrain1$gyros_arm_x)
summary(pmlTrain1$gyros_dumbbell_x)
summary(pmlTrain1$gyros_dumbbell_x)
summary(pmlTrain1$gyros_forearm_x)
df_gyros <- df %>%
select(classe, starts_with("gyros")) %>%
pivot_longer(cols = starts_with("gyros"), names_to = "variable", values_to = "value")
df_gyros <- pmlTrain1 %>%
select(classe, starts_with("gyros")) %>%
pivot_longer(cols = starts_with("gyros"), names_to = "variable", values_to = "value")
df_gyros_summary <- df_gyros %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
ggplot(df_gyros_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line(aes(group = classe)) +
labs(x = "Variables", y = "Average Value", title = "Average Values of Gyros Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(pmlTrain1)
summary_stats <- pmlTrain1 %>%
select(-X,-user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window,num_window) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE), sd_value = sd(value, na.rm = TRUE)) %>%
ungroup()
anova_results <- pmlTrain1 %>%
select(-X,-user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window,num_window) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable) %>%
nest() %>%
mutate(anova = map(data, ~ aov(value ~ classe, data = .x)),
tidy_anova = map(anova, tidy)) %>%
unnest(tidy_anova) %>%
filter(term == "classe")
nonFeatures <- c(X,user_name,raw_timestamp_part_1,raw_timestamp_part_2,cvtd_timestamp,new_window,num_window)
nonFeatures <- c("X","user_name","raw_timestamp_part_1","raw_timestamp_part_2","cvtd_timestamp","new_window,num_window")
nonFeaturesTrain <- pmlTrain1 %>% select(-nonFeatures)
nonFeaturesTrain <- pmlTrain1 %>% select(nonFeatures)
nonFeatures <- c("X","user_name","raw_timestamp_part_1","raw_timestamp_part_2","cvtd_timestamp","new_window","num_window")
nonFeaturesTrain <- pmlTrain1 %>% select(-nonFeatures)
View(nonFeaturesTrain)
nonFeatures <- c("X","user_name","raw_timestamp_part_1","raw_timestamp_part_2","cvtd_timestamp","new_window")
pmlTrain1_long <- pmlTrain1 %>%
select(-X, -user_name,-raw_timestamp_part_1,-raw_timestamp_part_2,-cvtd_timestamp,-new_window) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value")
pmlTrain1_summary <- pmlTrain1_long %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
+     geom_point() +
+     geom_line() +
+     labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
+     theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
summary_stats <- pmlTrain1 %>%
select(-nonFeatures) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE), sd_value = sd(value, na.rm = TRUE)) %>%
ungroup()
anova_results <- pmlTrain1 %>%
select(-nonFeatures) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable) %>%
nest() %>%
mutate(anova = map(data, ~ aov(value ~ classe, data = .x)),
tidy_anova = map(anova, tidy)) %>%
unnest(tidy_anova) %>%
filter(term == "classe")
library(broom)
library(purrr)
install.packages("broom")
library(broom)
anova_results <- pmlTrain1 %>%
select(-nonFeatures) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable) %>%
nest() %>%
mutate(anova = map(data, ~ aov(value ~ classe, data = .x)),
tidy_anova = map(anova, tidy)) %>%
unnest(tidy_anova) %>%
filter(term == "classe")
summary_anova <- summary_stats %>%
left_join(anova_results, by = "variable") %>%
select(variable, classe, mean_value, sd_value, p.value)
ggplot(df_gyros_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line(aes(group = classe)) +
labs(x = "Variables", y = "Average Value", title = "Average Values of Gyros Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
summary_stats <- pmlTrain1 %>%
select(-nonFeatures) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE), sd_value = sd(value, na.rm = TRUE)) %>%
ungroup()
anova_results <- pmlTrain1 %>%
select(-nonFeatures) %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value") %>%
group_by(variable) %>%
nest() %>%
mutate(anova = map(data, ~ aov(value ~ classe, data = .x)),
tidy_anova = map(anova, tidy)) %>%
unnest(tidy_anova) %>%
filter(term == "classe")
summary_anova <- summary_stats %>%
left_join(anova_results, by = "variable") %>%
select(variable, classe, mean_value, sd_value, p.value)
View(summary_anova)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(ggplot2)
library(dplyr)
library(purrr)
library(tidyr)
library(broom)
str(pmlTrain)
head(pmlTrain, n = 10)
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(pmlTrain1_gyros_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line(aes(group = classe)) +
labs(x = "Variables", y = "Average Value", title = "Average Values of Gyros Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pmlTrain1_gyros <- pmlTrain1 %>%
select(classe, starts_with("gyros")) %>%
pivot_longer(cols = starts_with("gyros"), names_to = "variable", values_to = "value")
pmlTrain1_gyros_summary <- pmlTrain1_gyros %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
ggplot(pmlTrain1_gyros_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line(aes(group = classe)) +
labs(x = "Variables", y = "Average Value", title = "Average Values of Gyros Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line() +
labs(x = "Variables", y = "Average Value", title = "Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(pmlTrain2)
View(pmlTrain1)
View(pmlTrain1)
library(dplyr)
hist(pmlTrain1[pmlTrain1$user_name == "carlitos",7])
hist(pmlTrain1[pmlTrain1$user_name == "jeremy",7])
hist(pmlTrain1[pmlTrain1$user_name == "eurico",7])
qplot(pmlTrain1$num_window)
qplot(pmlTrain1$num_window,pmlTrain1$X)
qplot(pmlTrain1$num_window,pmlTrain1$X,pch = 20,colour = "red")
qplot(pmlTrain1$num_window,pmlTrain1$X,pch = 10,colour = "red")
qplot(pmlTrain1$num_window,pmlTrain1$X)
hist(pmlTrain1$num_window)
qplot(pmlTrain1$classe,pmlTrain1$num_window)
nonFeatures <- c("X","user_name","raw_timestamp_part_1","raw_timestamp_part_2","cvtd_timestamp","new_window")
pmlTrain1_filtered <- pmlTrain1 %>%
select(-nonFeatures)
View(pmlTrain1_filtered)
pmlTrain1_standardized <- pmlTrain1_filtered %>%
mutate(across(-classe, ~ (.- mean(.)) / sd(.), .names = "std_{.col}"))
pmlTrain1_long <- pmlTrain1_standardized %>%
pivot_longer(cols = starts_with("std_"), names_to = "variable", values_to = "value")
pmlTrain1_summary <- pmlTrain1_long %>%
group_by(variable, classe) %>%
summarize(mean_value = mean(value, na.rm = TRUE)) %>%
ungroup()
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
geom_line(aes(group = classe)) +
labs(x = "Variables", y = "Standardized Average Value", title = "Standardized Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom")
ggplot(pmlTrain1_summary, aes(x = variable, y = mean_value, color = classe)) +
geom_point() +
labs(x = "Variables", y = "Standardized Average Value", title = "Standardized Average Values of Variables by Classe") +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom")
View(pmlTrain1_summary)
View(pmlTrain1_standardized)
View(pmlTrain1_filtered)
anova_pvalue <- function(feature) {
anova_result <- aov(value ~ classe, data = feature)
p_value <- summary(anova_result)[[1]][["Pr(>F)"]][1]
return(p_value)
}
View(pmlTrain1_filtered)
View(df_gyros)
View(pmlTrain1_filtered)
example_feature <- df_long %>%
filter(variable == "accel_arm_x")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(ggplot2)
library(dplyr)
library(purrr)
library(tidyr)
library(broom)
example_feature <- df_long %>%
filter(variable == "accel_arm_x")
anova_example <- aov(value ~ classe, data = example_feature)
summary(anova_example)
anova_pvalue <- function(feature) {
anova_result <- aov(value ~ classe, data = feature)
p_value <- summary(anova_result)[[1]][["Pr(>F)"]][1]
return(p_value)
}
trainLong <- pmlTrain1_filtered %>%
pivot_longer(cols = -classe, names_to = "variable", values_to = "value")
anova_results <- trainLong %>%
group_by(variable) %>%
nest() %>%
mutate(p_value = map_dbl(data, anova_pvalue))
View(anova_results)
significant_features <- anova_results %>%
filter(p_value < 0.05)
View(significant_features)
trainFinal <- pmlTrain1_filtered %>%
select(classe, all_of(significant_vars))
significant_vars <- significant_features$variable
trainFinal <- pmlTrain1_filtered %>%
select(classe, all_of(significant_vars))
rfFit <- randomForest(classe ~ ., data = trianFinal, importance = TRUE)
rfFit <- train(classe ~ .,data = trainFinal,method = "rf",prox = TRUE)
train_control <- trainControl(method = "cv", number = 10)
logistic_model <- train(
classe ~ .,
data = trainFInal,
method = "multinom",
trControl = train_control
)
logistic_model <- train(
classe ~ .,
data = trainFinal,
method = "multinom",
trControl = train_control
)
testFinal <- pmlTest %>% select(classe,all_of(significant_vars)
)
View(pmlTest)
testFinal <- pmlTest %>% select(all_of(significant_vars))
lmPred <- predict(logistics_model, newdata = test_data)
lmPred <- predict(logistic_model, newdata = test_data)
lmPred <- predict(logistic_model, newdata = testFinal)
lmModel <- logistic_model
lmPred
View(pmlTest)
